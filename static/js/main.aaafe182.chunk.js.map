{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["Header","props","className","Square","value","redColor","onClick","Box","buildBoxRow","row_num","box_row","i","push","values","box_i","box_j","curr_Box","Sudoku","handleClick","x","state","not_clickable","new_values","slice","setState","makeBoard","board","j","y","solver","new_board","solver_helper","next_empty","solver_findEmpty","num","solver_insertionValid","row","col","x_box","Math","floor","y_box","receivePuzzle","a","fetch","response","json","data","resetPuzzle","newColor","newClickRules","this","React","Component","Game","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.aaafe182.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Header(props){\n\n  return (\n    <div className=\"header\">\n      <h1>Sudoku Solver</h1>\n    </div>\n  )\n\n}\n\nfunction Square(props) {\n\n  return (\n    <button className={props.value === 0 ? \"square_empty\" : (props.redColor ? \"square_red\" : \"square\")} onClick={() => props.onClick()}>\n      {props.value}\n    </button>\n  )\n\n}\n\nfunction Box(props){\n\n  const buildBoxRow = (row_num) => {\n    const box_row = [];\n\n    for (let i = 0; i < 3; i++){\n      box_row.push(<Square \n                      value={props.values[(props.box_i*3)+row_num][(props.box_j*3)+i]} \n                      redColor={props.redColor[(props.box_i*3)+row_num][(props.box_j*3)+i]}\n                      onClick={() => props.onClick((props.box_i*3)+row_num, (props.box_j*3)+i)}\n                  />);\n    }\n\n    return box_row;\n  }\n\n  const curr_Box = [];\n\n  for (let i = 0; i < 3; i++){\n    curr_Box.push(buildBoxRow(i));\n  }\n\n  return (\n    <div className=\"box\">\n      {curr_Box}\n    </div>\n  )\n\n}\n\nclass Sudoku extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // 0 represents empty cell\n      values: [ \n                [0,0,0,0,0,0,0,0,0],\n                [0,0,0,0,0,0,0,0,0],\n                [0,0,0,0,0,0,0,0,0],\n                [0,0,0,0,0,0,0,0,0],\n                [0,0,0,0,0,0,0,0,0],\n                [0,0,0,0,0,0,0,0,0],\n                [0,0,0,0,0,0,0,0,0],\n                [0,0,0,0,0,0,0,0,0],\n                [0,0,0,0,0,0,0,0,0],\n              ],\n      redColor: [\n                  [false, false, false, false, false, false, false, false, false],\n                  [false, false, false, false, false, false, false, false, false],\n                  [false, false, false, false, false, false, false, false, false],\n                  [false, false, false, false, false, false, false, false, false],\n                  [false, false, false, false, false, false, false, false, false],\n                  [false, false, false, false, false, false, false, false, false],\n                  [false, false, false, false, false, false, false, false, false],\n                  [false, false, false, false, false, false, false, false, false],\n                  [false, false, false, false, false, false, false, false, false],\n                ],\n      not_clickable: [\n                  [false, false, false, false, false, false, false, false, false],\n                  [false, false, false, false, false, false, false, false, false],\n                  [false, false, false, false, false, false, false, false, false],\n                  [false, false, false, false, false, false, false, false, false],\n                  [false, false, false, false, false, false, false, false, false],\n                  [false, false, false, false, false, false, false, false, false],\n                  [false, false, false, false, false, false, false, false, false],\n                  [false, false, false, false, false, false, false, false, false],\n                  [false, false, false, false, false, false, false, false, false],\n                ],\n    }\n  }\n\n  // x refers to row, i refers to columns, indexed from 0 like usual\n  handleClick = (x, i) => {\n    if (!this.state.not_clickable[x][i]){\n      // better practice to create new array, change the desired elem and reassign...helps if we want to save multiple states anytime in the future\n      const new_values = this.state.values.slice();\n      new_values[x][i] = (new_values[x][i] === 9) ? 0 : (new_values[x][i]+1);\n      this.setState({values: new_values});\n    }\n  }\n\n  makeBoard = () => {\n    const board = [];\n\n    for (let i = 0; i < 3; i++){\n      for (let j = 0; j < 3; j++){\n        board.push(<Box box_i={i} box_j={j} values={this.state.values} redColor={this.state.redColor} onClick={(x, y) => this.handleClick(x, y)}/>);\n      }\n    }\n\n    return (\n      <div className=\"sudoku_board\">\n        {board}\n      </div>\n    )\n  }\n\n  solver = () => {\n    var new_board = this.state.values;\n    this.solver_helper(new_board);\n    this.setState({values: new_board});\n  }\n\n  solver_helper = (board) => {\n    let next_empty = this.solver_findEmpty(board);\n    if (next_empty===null){\n      return true;\n    }\n\n    for (let num = 1; num < 10; num++){\n      if (this.solver_insertionValid(board, next_empty[0], next_empty[1], num)){\n        board[next_empty[0]][next_empty[1]] = num;\n        if (this.solver_helper(board)){\n          return true;\n        }\n        board[next_empty[0]][next_empty[1]] = 0;\n      }\n    }\n    return false;\n  }\n\n  solver_findEmpty = (board) => {\n    for (let i = 0; i < 9; i++){\n      for (let j = 0; j < 9; j++){\n        if (board[i][j]===0){\n          return [i,j];\n        }\n      }\n    }\n    return null;\n  }\n\n  solver_insertionValid = (board, row, col, num) => {\n    // checking row\n    for (let i = 0; i < 9; i++){\n      if (board[row][i]===num){\n        return false;\n      }\n    }\n    // checking col\n    for (let i = 0; i < 9; i++){\n      if (board[i][col]===num){\n        return false;\n      }\n    }\n    // checking boxes\n    const x_box = Math.floor(row/3);\n    const y_box = Math.floor(col/3);\n    for (let i = 0; i < 3; i++){\n      for (let j = 0; j < 3; j++){\n        if (board[(x_box*3)+i][(y_box*3)+j]===num){\n          return false;\n        }\n      }\n    }\n    return true;\n  }\n\n  // what the fuckk is async and await\n\n  receivePuzzle = async () => {\n    const url = \"https://sugoku.herokuapp.com/board?difficulty=hard\";\n    const response = await fetch(url);\n    const data = await response.json();\n    this.resetPuzzle();\n    this.setState({values: data.board});\n    const newColor = this.state.redColor.slice();\n    const newClickRules = this.state.not_clickable.slice();\n    for (let i = 0; i < 9; i++){\n      for (let j = 0; j < 9; j++){\n        if (data.board[i][j] !== 0){\n          newColor[i][j] = !newColor[i][j];\n          newClickRules[i][j] = !newClickRules[i][j];\n        }\n      }\n    }\n    this.setState({redColor: newColor, not_clickable: newClickRules});\n  }\n\n  resetPuzzle = () => {\n    // there is probably a smarter way to do this...array mappings?\n    this.setState({values: [ \n                              [0,0,0,0,0,0,0,0,0],\n                              [0,0,0,0,0,0,0,0,0],\n                              [0,0,0,0,0,0,0,0,0],\n                              [0,0,0,0,0,0,0,0,0],\n                              [0,0,0,0,0,0,0,0,0],\n                              [0,0,0,0,0,0,0,0,0],\n                              [0,0,0,0,0,0,0,0,0],\n                              [0,0,0,0,0,0,0,0,0],\n                              [0,0,0,0,0,0,0,0,0],\n                            ],  \n                  redColor: [\n                    [false, false, false, false, false, false, false, false, false],\n                    [false, false, false, false, false, false, false, false, false],\n                    [false, false, false, false, false, false, false, false, false],\n                    [false, false, false, false, false, false, false, false, false],\n                    [false, false, false, false, false, false, false, false, false],\n                    [false, false, false, false, false, false, false, false, false],\n                    [false, false, false, false, false, false, false, false, false],\n                    [false, false, false, false, false, false, false, false, false],\n                    [false, false, false, false, false, false, false, false, false],\n                  ],\n                not_clickable: [\n                  [false, false, false, false, false, false, false, false, false],\n                  [false, false, false, false, false, false, false, false, false],\n                  [false, false, false, false, false, false, false, false, false],\n                  [false, false, false, false, false, false, false, false, false],\n                  [false, false, false, false, false, false, false, false, false],\n                  [false, false, false, false, false, false, false, false, false],\n                  [false, false, false, false, false, false, false, false, false],\n                  [false, false, false, false, false, false, false, false, false],\n                  [false, false, false, false, false, false, false, false, false],\n                ]\n              })\n  }\n\n  render () {\n    return (\n      <div className=\"sudoku_interface\"> \n        {this.makeBoard()}\n        <div className=\"buttons\">\n          <button className=\"button\" onClick={() => {this.solver()}}>Solve</button>\n          <button className=\"button\" onClick={() => {this.receivePuzzle()}}>Generate</button>\n          <button className=\"button\" onClick={() => {this.resetPuzzle()}}>Reset</button>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction Game() {\n  return (\n      <Sudoku/>\n  )\n}\n\nfunction App() {\n  return (\n    <div>\n      <Header/>\n      <Game/>\n    </div>\n  )\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}